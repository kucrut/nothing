name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install Dependencies
        run: npm install

      - name: Create Release Pull Request
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_new_version:
    name: Check new version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: check_new_version
        name: Check if there's a new version
        shell: bash
        run: |
          CHANGELOG_UPDATED=$(git diff --name-only HEAD^ HEAD | grep CHANGELOG.md)

          echo "::debug::$CHANGELOG_UPDATED"

          if [ -z ${CHANGELOG_UPDATED+x} ]; then
            NEW_VERSION=''
          else
            NEW_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[", ]//g')
          fi

          echo "::debug::$NEW_VERSION"

          echo "::set-output name=new_version::$NEW_VERSION"

  publish:
    name: Publish new version
    runs-on: ubuntu-latest
    needs: [check_new_version]
    if: needs.check_new_version.outputs.new_version != ''
    steps:
      - name: Setup Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Build assets
        run: |
          npm install
          npm run build

      - name: Create tag
        uses: EndBug/add-and-commit@v9
        with:
          add: "--force assets/dist"
          remove: "-r .changeset .github .editorconfig package-lock.json assets/src"
          tag: v${{steps.check_new_version.outputs.new_version}}
          push: "--tags"
